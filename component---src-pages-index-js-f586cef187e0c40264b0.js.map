{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/components/graph.js","webpack:///./src/pages/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/big-integer/BigInteger.js"],"names":["_assertThisInitialized","self","ReferenceError","GraphFunc","props","console","log","plot","yStretch","this","height","yFin","Array","n","fill","map","_","i","x","xStart","dx","pixelStep","y0","parseFloat","Algebrite","func","join","plotRiemann","drawIndividual","plotTrapezoidal","render","d","stroke","strokeWidth","pathLength","width","style","strokeDasharray","strokeDashoffset","animation","showRiemann","opacity","showTrapezoidal","React","Graph","window","innerWidth","innerHeight","xFin","yStart","changeN","bind","changeDim","state","x0","funcs","curFunc","addFunc","toAdd","concat","setState","slice","event","target","getAttribute","value","parseInt","stateParam","newVal","buttons","className","onClick","class","type","forFunc","min","max","defaultValue","onChange","x1","y1","x2","y2","placeholder","IndexPage","graphXStart","graphXFin","graphYStart","graphYFin","_child","componentDidMount","current","graphHeight","graphWidth","g","ref","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","BASE","MAX_INT","MAX_INT_ARR","smallToArray","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","length","compareAbs","createArray","truncate","ceil","add","a","b","sum","l_a","l_b","r","carry","base","push","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","prototype","create","plus","subtractAny","minus","small","multiply","l1","l2","multiplyKaratsuba","y","c","ac","bd","abcd","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","toJSNumber","t","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","roughLOB","gcd","integerLogarithm","tmp","p","e","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","valueOf","neg","Number","out","left","digit","toBaseString","stringify","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","str","toJSON","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","hasOwnProperty"],"mappings":"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","file":"component---src-pages-index-js-f586cef187e0c40264b0.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import * as React from \"react\";\nimport \"../components/layout.css\";\nimport * as Algebrite from \"algebrite\";\n\nclass GraphFunc extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"CALLED HERE\")\n    }\n\n    plot() {\n        const func = (x) => parseFloat(Algebrite.run(`float(subst(${x}, x, ${this.props.func}))`));\n        const yStretch = (this.props.height / 2) / this.props.yFin\n        return Array(this.props.n + 2).fill(1).map((_, i) => {\n            const x = this.props.xStart + this.props.dx * i;\n            return `${this.props.xStart + this.props.pixelStep * i} ${this.props.y0 - yStretch * func(x)}`\n        }).join(\" \")\n    }\n\n    plotRiemann(drawIndividual=false) {\n        const func = (x) => parseFloat(Algebrite.run(`float(subst(${x}, x, ${this.props.func}))`));\n        return Array(this.props.n + 2).fill(1).map((_, i) => {\n            const x = this.props.xStart + this.props.dx * i;\n            const y = (func(x) - func(x - this.props.dx)) / this.props.yFin;\n            return `L ${this.props.xStart + this.props.pixelStep * i} ${this.props.y0} M ${this.props.xStart + this.props.pixelStep * i} ${this.props.y0} L ${this.props.xStart + this.props.pixelStep * i} ${this.props.y0 - this.props.yStretch * func(x)} L ${this.props.xStart + this.props.pixelStep * (i + 1)} ${this.props.y0 - this.props.yStretch * func(x)}`\n        }).join(\" \")\n    }\n\n    plotTrapezoidal() {\n        const func = (x) => parseFloat(Algebrite.run(`float(subst(${x}, x, ${this.props.func}))`));\n        return Array(this.props.n + 2).fill(1).map((_, i) => {\n            const x = this.props.xStart + this.props.dx * i;\n            return `L ${this.props.xStart + this.props.pixelStep * i} ${this.props.y0 - this.props.yStretch * func(x)} L ${this.props.xStart + this.props.pixelStep * i} ${this.props.y0} L ${this.props.xStart + this.props.pixelStep * i} ${this.props.y0 - this.props.yStretch * func(x)}`\n        }).join(\" \") + `L ${this.props.xStart + (this.props.n + 3) * this.props.pixelStep} ${this.props.y0}`\n    }\n\n    render() {\n        console.log(\"PATH\", this.plotTrapezoidal());\n        const func = (x) => parseFloat(Algebrite.run(`float(subst(${x}, x, ${this.props.func}))`));\n        return <>\n        <path d={`M 0 ${this.props.y0 - this.props.yStretch * func(this.props.xStart)} L ${this.plot()}`} fill=\"transparent\" stroke=\"#0055CC\" strokeWidth={\"3px\"} pathLength={this.props.width} style={{\n            strokeDasharray: this.props.width, //`${this.state.width} ${this.state.width}`,\n            strokeDashoffset: this.props.width,\n            // strokeDashoffset: 1, //this.state.width,\n            animation: \"dash 3s linear forwards\"\n        }}/>\n        {this.props.showRiemann ? <path opacity={.5} d={`M 0 ${this.props.y0 - func(this.props.xStart)} ${this.plotRiemann()}`} fill=\"transparent\" stroke=\"grey\" strokeWidth={\"3px\"} pathLength={this.props.width} style={{\n            strokeDasharray: this.props.width,\n            strokeDashoffset: this.props.width,\n            animation: `dash ${this.props.n * 3}s linear forwards, colorchange1 1s 3s linear forwards`\n        }}/> : <></>}\n        {this.props.showTrapezoidal ? <path opacity={.5} d={`M 0 ${this.props.y0 - func(this.props.xStart)} ${this.plotTrapezoidal()} M 0 ${this.props.y0 - func(this.props.xStart)}`} fill=\"transparent\" stroke=\"#B2D948\" strokeWidth={\"3px\"} pathLength={this.props.width} style={{\n            strokeDasharray: this.props.width,\n            strokeDashoffset: this.props.width,\n            animation: `dash 3s linear forwards, colorchange2 1s 3s linear forwards`\n        }}/> : <></>}\n        </>\n        \n    }\n}\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"GOT PROPS\", props)\n        const width = this.props.width ? this.props.width : window.innerWidth;\n        const height = this.props.height ? this.props.height : window.innerHeight;\n        const xStart = (this.props.xStart || this.props.xStart == 0) ? this.props.xStart : -20;\n        const xFin = (this.props.xFin || this.props.xFin == 0) ? this.props.xFin : 20;\n        const yStart = (this.props.yStart || this.props.yStart == 0) ? this.props.yStart : -100;\n        const yFin = (this.props.yFin || this.props.yFin == 0) ? this.props.yFin : 10;\n\n        this.changeN = this.changeN.bind(this);\n        this.changeDim = this.changeDim.bind(this);\n\n        this.state = {\n            width: width,\n            height: height,\n            x0: width / 2,\n            y0: height / 2,\n            xStart: xStart,\n            yStart: yStart,\n            xFin: xFin,\n            yFin: yFin,    \n            \n            funcs: this.props.funcs,\n            curFunc: \"\"\n        }\n    }\n\n    addFunc(n = 20, showRiemann=false, showTrapezoidal=false) {\n        console.log(\"REACHED HERE\")\n        if(this.state.curFunc == \"\") return\n        const toAdd = {\n            n: n,\n            showRiemann: showRiemann,\n            showTrapezoidal: showTrapezoidal,\n            func: this.state.curFunc,\n            curFunc: \"\"\n        };\n        const funcs = this.state.funcs.concat(toAdd);\n        this.setState({ funcs: funcs })\n    }\n\n    showTrapezoidal(i) {\n        this.setState(({funcs}) => ({\n            funcs: [\n                ...funcs.slice(0,i),\n                {\n                    ...funcs[i],\n                    showTrapezoidal: !funcs[i].showTrapezoidal,\n                },\n                ...funcs.slice(i + 1)\n            ]\n        }));\n    }\n\n    showRiemann(i) {\n        this.setState(({funcs}) => ({\n            funcs: [\n                ...funcs.slice(0,i),\n                {\n                    ...funcs[i],\n                    showRiemann: !funcs[i].showRiemann,\n                },\n                ...funcs.slice(i + 1)\n            ]\n        }))\n    }\n\n    changeN(event) {\n        console.log(\"EVENT RECEIVED\", event.target.getAttribute('forFunc'), event.target.value)\n        const i = parseInt(event.target.getAttribute('forFunc'));\n        const n = parseInt(event.target.value);\n        \n        this.setState(({funcs}) => ({\n            funcs: [\n                ...funcs.slice(0,i),\n                {\n                    ...funcs[i],\n                    n: n\n                },\n                ...funcs.slice(i + 1)\n            ]\n        }));\n    }\n\n    changeDim(event) {\n        console.log(\"EVENT RECEIVED\", event.target.getAttribute('stateParam'), event.target.value)\n        const stateParam = event.target.getAttribute('stateParam')\n        const newVal = (stateParam == \"curFunc\") ? event.target.value : parseFloat(event.target.value);\n        const xFin = (stateParam == \"xFin\") ? parseFloat(newVal) : this.state.xFin;\n        const xStart = (stateParam == \"xFin\") ? parseFloat(newVal) : this.state.xFin;\n        const dx = (xFin - xStart) / this.state.n;\n        this.setState({\n            [stateParam]: newVal,\n            dx: dx\n        });\n    }\n\n    render() {\n        console.log(\"FUNCS\", this.state.funcs)\n        const buttons = this.state.funcs.map((x, i) => {\n            return <>\n            <hr />\n            <h3>Function {i + 1} = {x.func}</h3>\n            <a className=\"btn\" onClick={() => this.showRiemann(i)}>{x.showRiemann ? \"Remove\" : \"Add\"} Riemann</a>\n            <a className=\"btn\" onClick={() => this.showTrapezoidal(i)}>{x.showTrapezoidal ? \"Remove\" : \"Add\"} Trapezoidal</a>\n            <p class=\"range-field\">\n                <h3>Set n:</h3>\n                    <input type=\"range\" forFunc={i} min=\"0\" max=\"50\" defaultValue={x.n} onChange={this.changeN} />\n            </p>\n            <br/><br/></>\n        })\n        return <div style={{\n            height: this.state.height,\n            width: this.state.width\n        }} className=\"center-align\">\n            <svg width={this.state.width} height={\"100%\"}>\n                {/* <rect width=\"100%\" height=\"100%\" fill=\"black\"></rect> */}\n                {this.state.funcs.map(x => {\n                    console.log(\"X\", x);\n                    console.log(\"DIMS\", this.state.xStart, this.state.xFin, this.state.yFin, this.state.dx)\n                    const dx = (this.state.xFin - this.state.xStart) / x.n;\n                    const pixelStep = this.state.width / x.n;\n                    const yStretch = (this.state.height / 2) / this.state.yFin;\n                    return <GraphFunc \n                        width={this.state.width} height={this.state.height} xStart={this.state.xStart} yStart={this.state.yStart} xFin={this.state.xFin} yFin={this.state.yFin} x0={this.state.x0} y0={this.state.y0}\n                        yStretch={yStretch} n={x.n} showRiemann={x.showRiemann} showTrapezoidal={x.showTrapezoidal} func={x.func} dx={dx} pixelStep={pixelStep} />\n                }\n                )}\n                <line x1={0} y1={this.state.y0} x2={this.state.width} y2={this.state.y0} stroke=\"#2A707A\" />\n            </svg>\n            <div class=\"row\">\n                <div className=\"input-field col s4\">\n                <input stateParam=\"xStart\" type=\"number\" onChange={this.changeDim} defaultValue={this.state.xStart} />\n                    <p>x Min</p>\n                </div>\n                <div className=\"input-field col s4\">\n                <input stateParam=\"xFin\" type=\"number\" onChange={this.changeDim}  defaultValue={this.state.xFin} />\n                    <p>x Max</p>\n                </div>\n                <div className=\"input-field col s4\">\n                    <input stateParam=\"yFin\" type=\"number\" onChange={this.changeDim}  defaultValue={this.state.yFin} />\n                    <p>y Max</p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div className=\"input-field col s8\">\n                <input stateParam=\"curFunc\" onChange={this.changeDim} placeholder=\"e^x or sin(x) or cos(x) or x^2\" />\n                    <p>f(x) = </p>\n                </div>\n                <div className=\"input-field col s4\">\n                    <a class=\"btn\" onClick={() => this.addFunc()}>Add Function</a>\n                </div>\n            </div>\n            {buttons}\n        </div>\n    }\n}\n\nexport {Graph, GraphFunc}","import * as React from \"react\";\nimport {Graph, GraphFunc} from \"../components/graph\";\nimport \"../components/layout.css\";\n\nclass IndexPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            funcs: [],\n            graphXStart: -10,\n            graphXFin: 10,\n            graphYStart: -10,\n            graphYFin: 10\n        }\n        this._child = React.createRef();\n    }\n\n    componentDidMount() {\n        // this.addFunc(Math.sin)\n    }\n\n    addFunc(func, n = 25, showRiemann=false, showTrapezoidal=false) {\n        const dx = (this._child.current.state.xFin - this._child.current.state.xStart) / n;\n        const pixelStep = this._child.current.state.width / n;\n        const yStretch = (this._child.current.state.height / 2) / this._child.current.state.yFin;\n        const toAdd = {\n            yStretch: yStretch,\n            n: n,\n            showRiemann: showRiemann,\n            showTrapezoidal: showTrapezoidal,\n            func: 'x^2',\n            dx: dx,\n            pixelStep: pixelStep\n        };\n        const funcs = this._child.current.state.funcs.concat(toAdd);\n        this._child.current.setState({ funcs: funcs, xStart: 0 })\n    }\n\n    render() {\n        if (typeof window === `undefined`) {\n            return(<></>);\n        }\n\n        const graphHeight = window.innerHeight / 4;\n        const graphWidth = window.innerWidth / 4;\n\n        console.log(\"INDEX FUNCS\", this.state.funcs)\n        const g = <Graph ref={this._child} funcs={this.state.funcs.map(x => x)} height={graphHeight} width={graphWidth} xStart={this.state.graphXStart} xFin={this.state.graphXFin} yFin={this.state.graphYFin} />\n        return (\n            <main style={{\n                height: \"100vh\",\n                width: \"100%\"\n            }} className=\"valign-wrapper center-align\">\n                <div className=\"container center-align\">\n                    {/* <a className=\"btn\" onClick={() => this.addFunc(Math.cos)}>Add Cosine</a>\n                    <a className=\"btn\" onClick={() => this.addFunc((x) => x*x)}>Add Quadratic</a> */}\n                    {g}\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default IndexPage\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var bigInt = function (undefined) {\n  \"use strict\";\n\n  var BASE = 1e7,\n      LOG_BASE = 7,\n      MAX_INT = 9007199254740992,\n      MAX_INT_ARR = smallToArray(MAX_INT),\n      DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n  var supportsNativeBigInt = typeof BigInt === \"function\";\n\n  function Integer(v, radix, alphabet, caseSensitive) {\n    if (typeof v === \"undefined\") return Integer[0];\n    if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\n    return parseValue(v);\n  }\n\n  function BigInteger(value, sign) {\n    this.value = value;\n    this.sign = sign;\n    this.isSmall = false;\n  }\n\n  BigInteger.prototype = Object.create(Integer.prototype);\n\n  function SmallInteger(value) {\n    this.value = value;\n    this.sign = value < 0;\n    this.isSmall = true;\n  }\n\n  SmallInteger.prototype = Object.create(Integer.prototype);\n\n  function NativeBigInt(value) {\n    this.value = value;\n  }\n\n  NativeBigInt.prototype = Object.create(Integer.prototype);\n\n  function isPrecise(n) {\n    return -MAX_INT < n && n < MAX_INT;\n  }\n\n  function smallToArray(n) {\n    // For performance reasons doesn't reference BASE, need to change this function if BASE changes\n    if (n < 1e7) return [n];\n    if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];\n    return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\n  }\n\n  function arrayToSmall(arr) {\n    // If BASE changes this function may need to change\n    trim(arr);\n    var length = arr.length;\n\n    if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\n      switch (length) {\n        case 0:\n          return 0;\n\n        case 1:\n          return arr[0];\n\n        case 2:\n          return arr[0] + arr[1] * BASE;\n\n        default:\n          return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\n      }\n    }\n\n    return arr;\n  }\n\n  function trim(v) {\n    var i = v.length;\n\n    while (v[--i] === 0) {\n      ;\n    }\n\n    v.length = i + 1;\n  }\n\n  function createArray(length) {\n    // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\n    var x = new Array(length);\n    var i = -1;\n\n    while (++i < length) {\n      x[i] = 0;\n    }\n\n    return x;\n  }\n\n  function truncate(n) {\n    if (n > 0) return Math.floor(n);\n    return Math.ceil(n);\n  }\n\n  function add(a, b) {\n    // assumes a and b are arrays with a.length >= b.length\n    var l_a = a.length,\n        l_b = b.length,\n        r = new Array(l_a),\n        carry = 0,\n        base = BASE,\n        sum,\n        i;\n\n    for (i = 0; i < l_b; i++) {\n      sum = a[i] + b[i] + carry;\n      carry = sum >= base ? 1 : 0;\n      r[i] = sum - carry * base;\n    }\n\n    while (i < l_a) {\n      sum = a[i] + carry;\n      carry = sum === base ? 1 : 0;\n      r[i++] = sum - carry * base;\n    }\n\n    if (carry > 0) r.push(carry);\n    return r;\n  }\n\n  function addAny(a, b) {\n    if (a.length >= b.length) return add(a, b);\n    return add(b, a);\n  }\n\n  function addSmall(a, carry) {\n    // assumes a is array, carry is number with 0 <= carry < MAX_INT\n    var l = a.length,\n        r = new Array(l),\n        base = BASE,\n        sum,\n        i;\n\n    for (i = 0; i < l; i++) {\n      sum = a[i] - base + carry;\n      carry = Math.floor(sum / base);\n      r[i] = sum - carry * base;\n      carry += 1;\n    }\n\n    while (carry > 0) {\n      r[i++] = carry % base;\n      carry = Math.floor(carry / base);\n    }\n\n    return r;\n  }\n\n  BigInteger.prototype.add = function (v) {\n    var n = parseValue(v);\n\n    if (this.sign !== n.sign) {\n      return this.subtract(n.negate());\n    }\n\n    var a = this.value,\n        b = n.value;\n\n    if (n.isSmall) {\n      return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\n    }\n\n    return new BigInteger(addAny(a, b), this.sign);\n  };\n\n  BigInteger.prototype.plus = BigInteger.prototype.add;\n\n  SmallInteger.prototype.add = function (v) {\n    var n = parseValue(v);\n    var a = this.value;\n\n    if (a < 0 !== n.sign) {\n      return this.subtract(n.negate());\n    }\n\n    var b = n.value;\n\n    if (n.isSmall) {\n      if (isPrecise(a + b)) return new SmallInteger(a + b);\n      b = smallToArray(Math.abs(b));\n    }\n\n    return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\n  };\n\n  SmallInteger.prototype.plus = SmallInteger.prototype.add;\n\n  NativeBigInt.prototype.add = function (v) {\n    return new NativeBigInt(this.value + parseValue(v).value);\n  };\n\n  NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\n\n  function subtract(a, b) {\n    // assumes a and b are arrays with a >= b\n    var a_l = a.length,\n        b_l = b.length,\n        r = new Array(a_l),\n        borrow = 0,\n        base = BASE,\n        i,\n        difference;\n\n    for (i = 0; i < b_l; i++) {\n      difference = a[i] - borrow - b[i];\n\n      if (difference < 0) {\n        difference += base;\n        borrow = 1;\n      } else borrow = 0;\n\n      r[i] = difference;\n    }\n\n    for (i = b_l; i < a_l; i++) {\n      difference = a[i] - borrow;\n      if (difference < 0) difference += base;else {\n        r[i++] = difference;\n        break;\n      }\n      r[i] = difference;\n    }\n\n    for (; i < a_l; i++) {\n      r[i] = a[i];\n    }\n\n    trim(r);\n    return r;\n  }\n\n  function subtractAny(a, b, sign) {\n    var value;\n\n    if (compareAbs(a, b) >= 0) {\n      value = subtract(a, b);\n    } else {\n      value = subtract(b, a);\n      sign = !sign;\n    }\n\n    value = arrayToSmall(value);\n\n    if (typeof value === \"number\") {\n      if (sign) value = -value;\n      return new SmallInteger(value);\n    }\n\n    return new BigInteger(value, sign);\n  }\n\n  function subtractSmall(a, b, sign) {\n    // assumes a is array, b is number with 0 <= b < MAX_INT\n    var l = a.length,\n        r = new Array(l),\n        carry = -b,\n        base = BASE,\n        i,\n        difference;\n\n    for (i = 0; i < l; i++) {\n      difference = a[i] + carry;\n      carry = Math.floor(difference / base);\n      difference %= base;\n      r[i] = difference < 0 ? difference + base : difference;\n    }\n\n    r = arrayToSmall(r);\n\n    if (typeof r === \"number\") {\n      if (sign) r = -r;\n      return new SmallInteger(r);\n    }\n\n    return new BigInteger(r, sign);\n  }\n\n  BigInteger.prototype.subtract = function (v) {\n    var n = parseValue(v);\n\n    if (this.sign !== n.sign) {\n      return this.add(n.negate());\n    }\n\n    var a = this.value,\n        b = n.value;\n    if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);\n    return subtractAny(a, b, this.sign);\n  };\n\n  BigInteger.prototype.minus = BigInteger.prototype.subtract;\n\n  SmallInteger.prototype.subtract = function (v) {\n    var n = parseValue(v);\n    var a = this.value;\n\n    if (a < 0 !== n.sign) {\n      return this.add(n.negate());\n    }\n\n    var b = n.value;\n\n    if (n.isSmall) {\n      return new SmallInteger(a - b);\n    }\n\n    return subtractSmall(b, Math.abs(a), a >= 0);\n  };\n\n  SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\n\n  NativeBigInt.prototype.subtract = function (v) {\n    return new NativeBigInt(this.value - parseValue(v).value);\n  };\n\n  NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\n\n  BigInteger.prototype.negate = function () {\n    return new BigInteger(this.value, !this.sign);\n  };\n\n  SmallInteger.prototype.negate = function () {\n    var sign = this.sign;\n    var small = new SmallInteger(-this.value);\n    small.sign = !sign;\n    return small;\n  };\n\n  NativeBigInt.prototype.negate = function () {\n    return new NativeBigInt(-this.value);\n  };\n\n  BigInteger.prototype.abs = function () {\n    return new BigInteger(this.value, false);\n  };\n\n  SmallInteger.prototype.abs = function () {\n    return new SmallInteger(Math.abs(this.value));\n  };\n\n  NativeBigInt.prototype.abs = function () {\n    return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\n  };\n\n  function multiplyLong(a, b) {\n    var a_l = a.length,\n        b_l = b.length,\n        l = a_l + b_l,\n        r = createArray(l),\n        base = BASE,\n        product,\n        carry,\n        i,\n        a_i,\n        b_j;\n\n    for (i = 0; i < a_l; ++i) {\n      a_i = a[i];\n\n      for (var j = 0; j < b_l; ++j) {\n        b_j = b[j];\n        product = a_i * b_j + r[i + j];\n        carry = Math.floor(product / base);\n        r[i + j] = product - carry * base;\n        r[i + j + 1] += carry;\n      }\n    }\n\n    trim(r);\n    return r;\n  }\n\n  function multiplySmall(a, b) {\n    // assumes a is array, b is number with |b| < BASE\n    var l = a.length,\n        r = new Array(l),\n        base = BASE,\n        carry = 0,\n        product,\n        i;\n\n    for (i = 0; i < l; i++) {\n      product = a[i] * b + carry;\n      carry = Math.floor(product / base);\n      r[i] = product - carry * base;\n    }\n\n    while (carry > 0) {\n      r[i++] = carry % base;\n      carry = Math.floor(carry / base);\n    }\n\n    return r;\n  }\n\n  function shiftLeft(x, n) {\n    var r = [];\n\n    while (n-- > 0) {\n      r.push(0);\n    }\n\n    return r.concat(x);\n  }\n\n  function multiplyKaratsuba(x, y) {\n    var n = Math.max(x.length, y.length);\n    if (n <= 30) return multiplyLong(x, y);\n    n = Math.ceil(n / 2);\n    var b = x.slice(n),\n        a = x.slice(0, n),\n        d = y.slice(n),\n        c = y.slice(0, n);\n    var ac = multiplyKaratsuba(a, c),\n        bd = multiplyKaratsuba(b, d),\n        abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\n    var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\n    trim(product);\n    return product;\n  } // The following function is derived from a surface fit of a graph plotting the performance difference\n  // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\n\n\n  function useKaratsuba(l1, l2) {\n    return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\n  }\n\n  BigInteger.prototype.multiply = function (v) {\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value,\n        sign = this.sign !== n.sign,\n        abs;\n\n    if (n.isSmall) {\n      if (b === 0) return Integer[0];\n      if (b === 1) return this;\n      if (b === -1) return this.negate();\n      abs = Math.abs(b);\n\n      if (abs < BASE) {\n        return new BigInteger(multiplySmall(a, abs), sign);\n      }\n\n      b = smallToArray(abs);\n    }\n\n    if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\n      return new BigInteger(multiplyKaratsuba(a, b), sign);\n    return new BigInteger(multiplyLong(a, b), sign);\n  };\n\n  BigInteger.prototype.times = BigInteger.prototype.multiply;\n\n  function multiplySmallAndArray(a, b, sign) {\n    // a >= 0\n    if (a < BASE) {\n      return new BigInteger(multiplySmall(b, a), sign);\n    }\n\n    return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\n  }\n\n  SmallInteger.prototype._multiplyBySmall = function (a) {\n    if (isPrecise(a.value * this.value)) {\n      return new SmallInteger(a.value * this.value);\n    }\n\n    return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\n  };\n\n  BigInteger.prototype._multiplyBySmall = function (a) {\n    if (a.value === 0) return Integer[0];\n    if (a.value === 1) return this;\n    if (a.value === -1) return this.negate();\n    return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\n  };\n\n  SmallInteger.prototype.multiply = function (v) {\n    return parseValue(v)._multiplyBySmall(this);\n  };\n\n  SmallInteger.prototype.times = SmallInteger.prototype.multiply;\n\n  NativeBigInt.prototype.multiply = function (v) {\n    return new NativeBigInt(this.value * parseValue(v).value);\n  };\n\n  NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\n\n  function square(a) {\n    //console.assert(2 * BASE * BASE < MAX_INT);\n    var l = a.length,\n        r = createArray(l + l),\n        base = BASE,\n        product,\n        carry,\n        i,\n        a_i,\n        a_j;\n\n    for (i = 0; i < l; i++) {\n      a_i = a[i];\n      carry = 0 - a_i * a_i;\n\n      for (var j = i; j < l; j++) {\n        a_j = a[j];\n        product = 2 * (a_i * a_j) + r[i + j] + carry;\n        carry = Math.floor(product / base);\n        r[i + j] = product - carry * base;\n      }\n\n      r[i + l] = carry;\n    }\n\n    trim(r);\n    return r;\n  }\n\n  BigInteger.prototype.square = function () {\n    return new BigInteger(square(this.value), false);\n  };\n\n  SmallInteger.prototype.square = function () {\n    var value = this.value * this.value;\n    if (isPrecise(value)) return new SmallInteger(value);\n    return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\n  };\n\n  NativeBigInt.prototype.square = function (v) {\n    return new NativeBigInt(this.value * this.value);\n  };\n\n  function divMod1(a, b) {\n    // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\n    var a_l = a.length,\n        b_l = b.length,\n        base = BASE,\n        result = createArray(b.length),\n        divisorMostSignificantDigit = b[b_l - 1],\n        // normalization\n    lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\n        remainder = multiplySmall(a, lambda),\n        divisor = multiplySmall(b, lambda),\n        quotientDigit,\n        shift,\n        carry,\n        borrow,\n        i,\n        l,\n        q;\n    if (remainder.length <= a_l) remainder.push(0);\n    divisor.push(0);\n    divisorMostSignificantDigit = divisor[b_l - 1];\n\n    for (shift = a_l - b_l; shift >= 0; shift--) {\n      quotientDigit = base - 1;\n\n      if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\n        quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\n      } // quotientDigit <= base - 1\n\n\n      carry = 0;\n      borrow = 0;\n      l = divisor.length;\n\n      for (i = 0; i < l; i++) {\n        carry += quotientDigit * divisor[i];\n        q = Math.floor(carry / base);\n        borrow += remainder[shift + i] - (carry - q * base);\n        carry = q;\n\n        if (borrow < 0) {\n          remainder[shift + i] = borrow + base;\n          borrow = -1;\n        } else {\n          remainder[shift + i] = borrow;\n          borrow = 0;\n        }\n      }\n\n      while (borrow !== 0) {\n        quotientDigit -= 1;\n        carry = 0;\n\n        for (i = 0; i < l; i++) {\n          carry += remainder[shift + i] - base + divisor[i];\n\n          if (carry < 0) {\n            remainder[shift + i] = carry + base;\n            carry = 0;\n          } else {\n            remainder[shift + i] = carry;\n            carry = 1;\n          }\n        }\n\n        borrow += carry;\n      }\n\n      result[shift] = quotientDigit;\n    } // denormalization\n\n\n    remainder = divModSmall(remainder, lambda)[0];\n    return [arrayToSmall(result), arrayToSmall(remainder)];\n  }\n\n  function divMod2(a, b) {\n    // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\n    // Performs faster than divMod1 on larger input sizes.\n    var a_l = a.length,\n        b_l = b.length,\n        result = [],\n        part = [],\n        base = BASE,\n        guess,\n        xlen,\n        highx,\n        highy,\n        check;\n\n    while (a_l) {\n      part.unshift(a[--a_l]);\n      trim(part);\n\n      if (compareAbs(part, b) < 0) {\n        result.push(0);\n        continue;\n      }\n\n      xlen = part.length;\n      highx = part[xlen - 1] * base + part[xlen - 2];\n      highy = b[b_l - 1] * base + b[b_l - 2];\n\n      if (xlen > b_l) {\n        highx = (highx + 1) * base;\n      }\n\n      guess = Math.ceil(highx / highy);\n\n      do {\n        check = multiplySmall(b, guess);\n        if (compareAbs(check, part) <= 0) break;\n        guess--;\n      } while (guess);\n\n      result.push(guess);\n      part = subtract(part, check);\n    }\n\n    result.reverse();\n    return [arrayToSmall(result), arrayToSmall(part)];\n  }\n\n  function divModSmall(value, lambda) {\n    var length = value.length,\n        quotient = createArray(length),\n        base = BASE,\n        i,\n        q,\n        remainder,\n        divisor;\n    remainder = 0;\n\n    for (i = length - 1; i >= 0; --i) {\n      divisor = remainder * base + value[i];\n      q = truncate(divisor / lambda);\n      remainder = divisor - q * lambda;\n      quotient[i] = q | 0;\n    }\n\n    return [quotient, remainder | 0];\n  }\n\n  function divModAny(self, v) {\n    var value,\n        n = parseValue(v);\n\n    if (supportsNativeBigInt) {\n      return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\n    }\n\n    var a = self.value,\n        b = n.value;\n    var quotient;\n    if (b === 0) throw new Error(\"Cannot divide by zero\");\n\n    if (self.isSmall) {\n      if (n.isSmall) {\n        return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\n      }\n\n      return [Integer[0], self];\n    }\n\n    if (n.isSmall) {\n      if (b === 1) return [self, Integer[0]];\n      if (b == -1) return [self.negate(), Integer[0]];\n      var abs = Math.abs(b);\n\n      if (abs < BASE) {\n        value = divModSmall(a, abs);\n        quotient = arrayToSmall(value[0]);\n        var remainder = value[1];\n        if (self.sign) remainder = -remainder;\n\n        if (typeof quotient === \"number\") {\n          if (self.sign !== n.sign) quotient = -quotient;\n          return [new SmallInteger(quotient), new SmallInteger(remainder)];\n        }\n\n        return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\n      }\n\n      b = smallToArray(abs);\n    }\n\n    var comparison = compareAbs(a, b);\n    if (comparison === -1) return [Integer[0], self];\n    if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]]; // divMod1 is faster on smaller input sizes\n\n    if (a.length + b.length <= 200) value = divMod1(a, b);else value = divMod2(a, b);\n    quotient = value[0];\n    var qSign = self.sign !== n.sign,\n        mod = value[1],\n        mSign = self.sign;\n\n    if (typeof quotient === \"number\") {\n      if (qSign) quotient = -quotient;\n      quotient = new SmallInteger(quotient);\n    } else quotient = new BigInteger(quotient, qSign);\n\n    if (typeof mod === \"number\") {\n      if (mSign) mod = -mod;\n      mod = new SmallInteger(mod);\n    } else mod = new BigInteger(mod, mSign);\n\n    return [quotient, mod];\n  }\n\n  BigInteger.prototype.divmod = function (v) {\n    var result = divModAny(this, v);\n    return {\n      quotient: result[0],\n      remainder: result[1]\n    };\n  };\n\n  NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\n\n  BigInteger.prototype.divide = function (v) {\n    return divModAny(this, v)[0];\n  };\n\n  NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\n    return new NativeBigInt(this.value / parseValue(v).value);\n  };\n\n  SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\n\n  BigInteger.prototype.mod = function (v) {\n    return divModAny(this, v)[1];\n  };\n\n  NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\n    return new NativeBigInt(this.value % parseValue(v).value);\n  };\n\n  SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\n\n  BigInteger.prototype.pow = function (v) {\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value,\n        value,\n        x,\n        y;\n    if (b === 0) return Integer[1];\n    if (a === 0) return Integer[0];\n    if (a === 1) return Integer[1];\n    if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\n\n    if (n.sign) {\n      return Integer[0];\n    }\n\n    if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\n\n    if (this.isSmall) {\n      if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value));\n    }\n\n    x = this;\n    y = Integer[1];\n\n    while (true) {\n      if (b & 1 === 1) {\n        y = y.times(x);\n        --b;\n      }\n\n      if (b === 0) break;\n      b /= 2;\n      x = x.square();\n    }\n\n    return y;\n  };\n\n  SmallInteger.prototype.pow = BigInteger.prototype.pow;\n\n  NativeBigInt.prototype.pow = function (v) {\n    var n = parseValue(v);\n    var a = this.value,\n        b = n.value;\n\n    var _0 = BigInt(0),\n        _1 = BigInt(1),\n        _2 = BigInt(2);\n\n    if (b === _0) return Integer[1];\n    if (a === _0) return Integer[0];\n    if (a === _1) return Integer[1];\n    if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\n    if (n.isNegative()) return new NativeBigInt(_0);\n    var x = this;\n    var y = Integer[1];\n\n    while (true) {\n      if ((b & _1) === _1) {\n        y = y.times(x);\n        --b;\n      }\n\n      if (b === _0) break;\n      b /= _2;\n      x = x.square();\n    }\n\n    return y;\n  };\n\n  BigInteger.prototype.modPow = function (exp, mod) {\n    exp = parseValue(exp);\n    mod = parseValue(mod);\n    if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n    var r = Integer[1],\n        base = this.mod(mod);\n\n    if (exp.isNegative()) {\n      exp = exp.multiply(Integer[-1]);\n      base = base.modInv(mod);\n    }\n\n    while (exp.isPositive()) {\n      if (base.isZero()) return Integer[0];\n      if (exp.isOdd()) r = r.multiply(base).mod(mod);\n      exp = exp.divide(2);\n      base = base.square().mod(mod);\n    }\n\n    return r;\n  };\n\n  NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\n\n  function compareAbs(a, b) {\n    if (a.length !== b.length) {\n      return a.length > b.length ? 1 : -1;\n    }\n\n    for (var i = a.length - 1; i >= 0; i--) {\n      if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\n    }\n\n    return 0;\n  }\n\n  BigInteger.prototype.compareAbs = function (v) {\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n    if (n.isSmall) return 1;\n    return compareAbs(a, b);\n  };\n\n  SmallInteger.prototype.compareAbs = function (v) {\n    var n = parseValue(v),\n        a = Math.abs(this.value),\n        b = n.value;\n\n    if (n.isSmall) {\n      b = Math.abs(b);\n      return a === b ? 0 : a > b ? 1 : -1;\n    }\n\n    return -1;\n  };\n\n  NativeBigInt.prototype.compareAbs = function (v) {\n    var a = this.value;\n    var b = parseValue(v).value;\n    a = a >= 0 ? a : -a;\n    b = b >= 0 ? b : -b;\n    return a === b ? 0 : a > b ? 1 : -1;\n  };\n\n  BigInteger.prototype.compare = function (v) {\n    // See discussion about comparison with Infinity:\n    // https://github.com/peterolson/BigInteger.js/issues/61\n    if (v === Infinity) {\n      return -1;\n    }\n\n    if (v === -Infinity) {\n      return 1;\n    }\n\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n\n    if (this.sign !== n.sign) {\n      return n.sign ? 1 : -1;\n    }\n\n    if (n.isSmall) {\n      return this.sign ? -1 : 1;\n    }\n\n    return compareAbs(a, b) * (this.sign ? -1 : 1);\n  };\n\n  BigInteger.prototype.compareTo = BigInteger.prototype.compare;\n\n  SmallInteger.prototype.compare = function (v) {\n    if (v === Infinity) {\n      return -1;\n    }\n\n    if (v === -Infinity) {\n      return 1;\n    }\n\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n\n    if (n.isSmall) {\n      return a == b ? 0 : a > b ? 1 : -1;\n    }\n\n    if (a < 0 !== n.sign) {\n      return a < 0 ? -1 : 1;\n    }\n\n    return a < 0 ? 1 : -1;\n  };\n\n  SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\n\n  NativeBigInt.prototype.compare = function (v) {\n    if (v === Infinity) {\n      return -1;\n    }\n\n    if (v === -Infinity) {\n      return 1;\n    }\n\n    var a = this.value;\n    var b = parseValue(v).value;\n    return a === b ? 0 : a > b ? 1 : -1;\n  };\n\n  NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\n\n  BigInteger.prototype.equals = function (v) {\n    return this.compare(v) === 0;\n  };\n\n  NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\n\n  BigInteger.prototype.notEquals = function (v) {\n    return this.compare(v) !== 0;\n  };\n\n  NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\n\n  BigInteger.prototype.greater = function (v) {\n    return this.compare(v) > 0;\n  };\n\n  NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\n\n  BigInteger.prototype.lesser = function (v) {\n    return this.compare(v) < 0;\n  };\n\n  NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\n\n  BigInteger.prototype.greaterOrEquals = function (v) {\n    return this.compare(v) >= 0;\n  };\n\n  NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\n\n  BigInteger.prototype.lesserOrEquals = function (v) {\n    return this.compare(v) <= 0;\n  };\n\n  NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\n\n  BigInteger.prototype.isEven = function () {\n    return (this.value[0] & 1) === 0;\n  };\n\n  SmallInteger.prototype.isEven = function () {\n    return (this.value & 1) === 0;\n  };\n\n  NativeBigInt.prototype.isEven = function () {\n    return (this.value & BigInt(1)) === BigInt(0);\n  };\n\n  BigInteger.prototype.isOdd = function () {\n    return (this.value[0] & 1) === 1;\n  };\n\n  SmallInteger.prototype.isOdd = function () {\n    return (this.value & 1) === 1;\n  };\n\n  NativeBigInt.prototype.isOdd = function () {\n    return (this.value & BigInt(1)) === BigInt(1);\n  };\n\n  BigInteger.prototype.isPositive = function () {\n    return !this.sign;\n  };\n\n  SmallInteger.prototype.isPositive = function () {\n    return this.value > 0;\n  };\n\n  NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\n\n  BigInteger.prototype.isNegative = function () {\n    return this.sign;\n  };\n\n  SmallInteger.prototype.isNegative = function () {\n    return this.value < 0;\n  };\n\n  NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\n\n  BigInteger.prototype.isUnit = function () {\n    return false;\n  };\n\n  SmallInteger.prototype.isUnit = function () {\n    return Math.abs(this.value) === 1;\n  };\n\n  NativeBigInt.prototype.isUnit = function () {\n    return this.abs().value === BigInt(1);\n  };\n\n  BigInteger.prototype.isZero = function () {\n    return false;\n  };\n\n  SmallInteger.prototype.isZero = function () {\n    return this.value === 0;\n  };\n\n  NativeBigInt.prototype.isZero = function () {\n    return this.value === BigInt(0);\n  };\n\n  BigInteger.prototype.isDivisibleBy = function (v) {\n    var n = parseValue(v);\n    if (n.isZero()) return false;\n    if (n.isUnit()) return true;\n    if (n.compareAbs(2) === 0) return this.isEven();\n    return this.mod(n).isZero();\n  };\n\n  NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\n\n  function isBasicPrime(v) {\n    var n = v.abs();\n    if (n.isUnit()) return false;\n    if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\n    if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\n    if (n.lesser(49)) return true; // we don't know if it's prime: let the other functions figure it out\n  }\n\n  function millerRabinTest(n, a) {\n    var nPrev = n.prev(),\n        b = nPrev,\n        r = 0,\n        d,\n        t,\n        i,\n        x;\n\n    while (b.isEven()) {\n      b = b.divide(2), r++;\n    }\n\n    next: for (i = 0; i < a.length; i++) {\n      if (n.lesser(a[i])) continue;\n      x = bigInt(a[i]).modPow(b, n);\n      if (x.isUnit() || x.equals(nPrev)) continue;\n\n      for (d = r - 1; d != 0; d--) {\n        x = x.square().mod(n);\n        if (x.isUnit()) return false;\n        if (x.equals(nPrev)) continue next;\n      }\n\n      return false;\n    }\n\n    return true;\n  } // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\n\n\n  BigInteger.prototype.isPrime = function (strict) {\n    var isPrime = isBasicPrime(this);\n    if (isPrime !== undefined) return isPrime;\n    var n = this.abs();\n    var bits = n.bitLength();\n    if (bits <= 64) return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\n    var logN = Math.log(2) * bits.toJSNumber();\n    var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);\n\n    for (var a = [], i = 0; i < t; i++) {\n      a.push(bigInt(i + 2));\n    }\n\n    return millerRabinTest(n, a);\n  };\n\n  NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\n\n  BigInteger.prototype.isProbablePrime = function (iterations, rng) {\n    var isPrime = isBasicPrime(this);\n    if (isPrime !== undefined) return isPrime;\n    var n = this.abs();\n    var t = iterations === undefined ? 5 : iterations;\n\n    for (var a = [], i = 0; i < t; i++) {\n      a.push(bigInt.randBetween(2, n.minus(2), rng));\n    }\n\n    return millerRabinTest(n, a);\n  };\n\n  NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\n\n  BigInteger.prototype.modInv = function (n) {\n    var t = bigInt.zero,\n        newT = bigInt.one,\n        r = parseValue(n),\n        newR = this.abs(),\n        q,\n        lastT,\n        lastR;\n\n    while (!newR.isZero()) {\n      q = r.divide(newR);\n      lastT = t;\n      lastR = r;\n      t = newT;\n      r = newR;\n      newT = lastT.subtract(q.multiply(newT));\n      newR = lastR.subtract(q.multiply(newR));\n    }\n\n    if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\n\n    if (t.compare(0) === -1) {\n      t = t.add(n);\n    }\n\n    if (this.isNegative()) {\n      return t.negate();\n    }\n\n    return t;\n  };\n\n  NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\n\n  BigInteger.prototype.next = function () {\n    var value = this.value;\n\n    if (this.sign) {\n      return subtractSmall(value, 1, this.sign);\n    }\n\n    return new BigInteger(addSmall(value, 1), this.sign);\n  };\n\n  SmallInteger.prototype.next = function () {\n    var value = this.value;\n    if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\n    return new BigInteger(MAX_INT_ARR, false);\n  };\n\n  NativeBigInt.prototype.next = function () {\n    return new NativeBigInt(this.value + BigInt(1));\n  };\n\n  BigInteger.prototype.prev = function () {\n    var value = this.value;\n\n    if (this.sign) {\n      return new BigInteger(addSmall(value, 1), true);\n    }\n\n    return subtractSmall(value, 1, this.sign);\n  };\n\n  SmallInteger.prototype.prev = function () {\n    var value = this.value;\n    if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\n    return new BigInteger(MAX_INT_ARR, true);\n  };\n\n  NativeBigInt.prototype.prev = function () {\n    return new NativeBigInt(this.value - BigInt(1));\n  };\n\n  var powersOfTwo = [1];\n\n  while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) {\n    powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\n  }\n\n  var powers2Length = powersOfTwo.length,\n      highestPower2 = powersOfTwo[powers2Length - 1];\n\n  function shift_isSmall(n) {\n    return Math.abs(n) <= BASE;\n  }\n\n  BigInteger.prototype.shiftLeft = function (v) {\n    var n = parseValue(v).toJSNumber();\n\n    if (!shift_isSmall(n)) {\n      throw new Error(String(n) + \" is too large for shifting.\");\n    }\n\n    if (n < 0) return this.shiftRight(-n);\n    var result = this;\n    if (result.isZero()) return result;\n\n    while (n >= powers2Length) {\n      result = result.multiply(highestPower2);\n      n -= powers2Length - 1;\n    }\n\n    return result.multiply(powersOfTwo[n]);\n  };\n\n  NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\n\n  BigInteger.prototype.shiftRight = function (v) {\n    var remQuo;\n    var n = parseValue(v).toJSNumber();\n\n    if (!shift_isSmall(n)) {\n      throw new Error(String(n) + \" is too large for shifting.\");\n    }\n\n    if (n < 0) return this.shiftLeft(-n);\n    var result = this;\n\n    while (n >= powers2Length) {\n      if (result.isZero() || result.isNegative() && result.isUnit()) return result;\n      remQuo = divModAny(result, highestPower2);\n      result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n      n -= powers2Length - 1;\n    }\n\n    remQuo = divModAny(result, powersOfTwo[n]);\n    return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n  };\n\n  NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\n\n  function bitwise(x, y, fn) {\n    y = parseValue(y);\n    var xSign = x.isNegative(),\n        ySign = y.isNegative();\n    var xRem = xSign ? x.not() : x,\n        yRem = ySign ? y.not() : y;\n    var xDigit = 0,\n        yDigit = 0;\n    var xDivMod = null,\n        yDivMod = null;\n    var result = [];\n\n    while (!xRem.isZero() || !yRem.isZero()) {\n      xDivMod = divModAny(xRem, highestPower2);\n      xDigit = xDivMod[1].toJSNumber();\n\n      if (xSign) {\n        xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\n      }\n\n      yDivMod = divModAny(yRem, highestPower2);\n      yDigit = yDivMod[1].toJSNumber();\n\n      if (ySign) {\n        yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\n      }\n\n      xRem = xDivMod[0];\n      yRem = yDivMod[0];\n      result.push(fn(xDigit, yDigit));\n    }\n\n    var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\n\n    for (var i = result.length - 1; i >= 0; i -= 1) {\n      sum = sum.multiply(highestPower2).add(bigInt(result[i]));\n    }\n\n    return sum;\n  }\n\n  BigInteger.prototype.not = function () {\n    return this.negate().prev();\n  };\n\n  NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\n\n  BigInteger.prototype.and = function (n) {\n    return bitwise(this, n, function (a, b) {\n      return a & b;\n    });\n  };\n\n  NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\n\n  BigInteger.prototype.or = function (n) {\n    return bitwise(this, n, function (a, b) {\n      return a | b;\n    });\n  };\n\n  NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\n\n  BigInteger.prototype.xor = function (n) {\n    return bitwise(this, n, function (a, b) {\n      return a ^ b;\n    });\n  };\n\n  NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\n  var LOBMASK_I = 1 << 30,\n      LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\n\n  function roughLOB(n) {\n    // get lowestOneBit (rough)\n    // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\n    // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\n    var v = n.value,\n        x = typeof v === \"number\" ? v | LOBMASK_I : typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) : v[0] + v[1] * BASE | LOBMASK_BI;\n    return x & -x;\n  }\n\n  function integerLogarithm(value, base) {\n    if (base.compareTo(value) <= 0) {\n      var tmp = integerLogarithm(value, base.square(base));\n      var p = tmp.p;\n      var e = tmp.e;\n      var t = p.multiply(base);\n      return t.compareTo(value) <= 0 ? {\n        p: t,\n        e: e * 2 + 1\n      } : {\n        p: p,\n        e: e * 2\n      };\n    }\n\n    return {\n      p: bigInt(1),\n      e: 0\n    };\n  }\n\n  BigInteger.prototype.bitLength = function () {\n    var n = this;\n\n    if (n.compareTo(bigInt(0)) < 0) {\n      n = n.negate().subtract(bigInt(1));\n    }\n\n    if (n.compareTo(bigInt(0)) === 0) {\n      return bigInt(0);\n    }\n\n    return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\n  };\n\n  NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\n\n  function max(a, b) {\n    a = parseValue(a);\n    b = parseValue(b);\n    return a.greater(b) ? a : b;\n  }\n\n  function min(a, b) {\n    a = parseValue(a);\n    b = parseValue(b);\n    return a.lesser(b) ? a : b;\n  }\n\n  function gcd(a, b) {\n    a = parseValue(a).abs();\n    b = parseValue(b).abs();\n    if (a.equals(b)) return a;\n    if (a.isZero()) return b;\n    if (b.isZero()) return a;\n    var c = Integer[1],\n        d,\n        t;\n\n    while (a.isEven() && b.isEven()) {\n      d = min(roughLOB(a), roughLOB(b));\n      a = a.divide(d);\n      b = b.divide(d);\n      c = c.multiply(d);\n    }\n\n    while (a.isEven()) {\n      a = a.divide(roughLOB(a));\n    }\n\n    do {\n      while (b.isEven()) {\n        b = b.divide(roughLOB(b));\n      }\n\n      if (a.greater(b)) {\n        t = b;\n        b = a;\n        a = t;\n      }\n\n      b = b.subtract(a);\n    } while (!b.isZero());\n\n    return c.isUnit() ? a : a.multiply(c);\n  }\n\n  function lcm(a, b) {\n    a = parseValue(a).abs();\n    b = parseValue(b).abs();\n    return a.divide(gcd(a, b)).multiply(b);\n  }\n\n  function randBetween(a, b, rng) {\n    a = parseValue(a);\n    b = parseValue(b);\n    var usedRNG = rng || Math.random;\n    var low = min(a, b),\n        high = max(a, b);\n    var range = high.subtract(low).add(1);\n    if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\n    var digits = toBase(range, BASE).value;\n    var result = [],\n        restricted = true;\n\n    for (var i = 0; i < digits.length; i++) {\n      var top = restricted ? digits[i] : BASE;\n      var digit = truncate(usedRNG() * top);\n      result.push(digit);\n      if (digit < top) restricted = false;\n    }\n\n    return low.add(Integer.fromArray(result, BASE, false));\n  }\n\n  var parseBase = function parseBase(text, base, alphabet, caseSensitive) {\n    alphabet = alphabet || DEFAULT_ALPHABET;\n    text = String(text);\n\n    if (!caseSensitive) {\n      text = text.toLowerCase();\n      alphabet = alphabet.toLowerCase();\n    }\n\n    var length = text.length;\n    var i;\n    var absBase = Math.abs(base);\n    var alphabetValues = {};\n\n    for (i = 0; i < alphabet.length; i++) {\n      alphabetValues[alphabet[i]] = i;\n    }\n\n    for (i = 0; i < length; i++) {\n      var c = text[i];\n      if (c === \"-\") continue;\n\n      if (c in alphabetValues) {\n        if (alphabetValues[c] >= absBase) {\n          if (c === \"1\" && absBase === 1) continue;\n          throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n        }\n      }\n    }\n\n    base = parseValue(base);\n    var digits = [];\n    var isNegative = text[0] === \"-\";\n\n    for (i = isNegative ? 1 : 0; i < text.length; i++) {\n      var c = text[i];\n      if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));else if (c === \"<\") {\n        var start = i;\n\n        do {\n          i++;\n        } while (text[i] !== \">\" && i < text.length);\n\n        digits.push(parseValue(text.slice(start + 1, i)));\n      } else throw new Error(c + \" is not a valid character\");\n    }\n\n    return parseBaseFromArray(digits, base, isNegative);\n  };\n\n  function parseBaseFromArray(digits, base, isNegative) {\n    var val = Integer[0],\n        pow = Integer[1],\n        i;\n\n    for (i = digits.length - 1; i >= 0; i--) {\n      val = val.add(digits[i].times(pow));\n      pow = pow.times(base);\n    }\n\n    return isNegative ? val.negate() : val;\n  }\n\n  function stringify(digit, alphabet) {\n    alphabet = alphabet || DEFAULT_ALPHABET;\n\n    if (digit < alphabet.length) {\n      return alphabet[digit];\n    }\n\n    return \"<\" + digit + \">\";\n  }\n\n  function toBase(n, base) {\n    base = bigInt(base);\n\n    if (base.isZero()) {\n      if (n.isZero()) return {\n        value: [0],\n        isNegative: false\n      };\n      throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n    }\n\n    if (base.equals(-1)) {\n      if (n.isZero()) return {\n        value: [0],\n        isNegative: false\n      };\n      if (n.isNegative()) return {\n        value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber())).map(Array.prototype.valueOf, [1, 0])),\n        isNegative: false\n      };\n      var arr = Array.apply(null, Array(n.toJSNumber() - 1)).map(Array.prototype.valueOf, [0, 1]);\n      arr.unshift([1]);\n      return {\n        value: [].concat.apply([], arr),\n        isNegative: false\n      };\n    }\n\n    var neg = false;\n\n    if (n.isNegative() && base.isPositive()) {\n      neg = true;\n      n = n.abs();\n    }\n\n    if (base.isUnit()) {\n      if (n.isZero()) return {\n        value: [0],\n        isNegative: false\n      };\n      return {\n        value: Array.apply(null, Array(n.toJSNumber())).map(Number.prototype.valueOf, 1),\n        isNegative: neg\n      };\n    }\n\n    var out = [];\n    var left = n,\n        divmod;\n\n    while (left.isNegative() || left.compareAbs(base) >= 0) {\n      divmod = left.divmod(base);\n      left = divmod.quotient;\n      var digit = divmod.remainder;\n\n      if (digit.isNegative()) {\n        digit = base.minus(digit).abs();\n        left = left.next();\n      }\n\n      out.push(digit.toJSNumber());\n    }\n\n    out.push(left.toJSNumber());\n    return {\n      value: out.reverse(),\n      isNegative: neg\n    };\n  }\n\n  function toBaseString(n, base, alphabet) {\n    var arr = toBase(n, base);\n    return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\n      return stringify(x, alphabet);\n    }).join('');\n  }\n\n  BigInteger.prototype.toArray = function (radix) {\n    return toBase(this, radix);\n  };\n\n  SmallInteger.prototype.toArray = function (radix) {\n    return toBase(this, radix);\n  };\n\n  NativeBigInt.prototype.toArray = function (radix) {\n    return toBase(this, radix);\n  };\n\n  BigInteger.prototype.toString = function (radix, alphabet) {\n    if (radix === undefined) radix = 10;\n    if (radix !== 10) return toBaseString(this, radix, alphabet);\n    var v = this.value,\n        l = v.length,\n        str = String(v[--l]),\n        zeros = \"0000000\",\n        digit;\n\n    while (--l >= 0) {\n      digit = String(v[l]);\n      str += zeros.slice(digit.length) + digit;\n    }\n\n    var sign = this.sign ? \"-\" : \"\";\n    return sign + str;\n  };\n\n  SmallInteger.prototype.toString = function (radix, alphabet) {\n    if (radix === undefined) radix = 10;\n    if (radix != 10) return toBaseString(this, radix, alphabet);\n    return String(this.value);\n  };\n\n  NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\n\n  NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  BigInteger.prototype.valueOf = function () {\n    return parseInt(this.toString(), 10);\n  };\n\n  BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\n\n  SmallInteger.prototype.valueOf = function () {\n    return this.value;\n  };\n\n  SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\n\n  NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\n    return parseInt(this.toString(), 10);\n  };\n\n  function parseStringValue(v) {\n    if (isPrecise(+v)) {\n      var x = +v;\n      if (x === truncate(x)) return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\n      throw new Error(\"Invalid integer: \" + v);\n    }\n\n    var sign = v[0] === \"-\";\n    if (sign) v = v.slice(1);\n    var split = v.split(/e/i);\n    if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\n\n    if (split.length === 2) {\n      var exp = split[1];\n      if (exp[0] === \"+\") exp = exp.slice(1);\n      exp = +exp;\n      if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\n      var text = split[0];\n      var decimalPlace = text.indexOf(\".\");\n\n      if (decimalPlace >= 0) {\n        exp -= text.length - decimalPlace - 1;\n        text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\n      }\n\n      if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n      text += new Array(exp + 1).join(\"0\");\n      v = text;\n    }\n\n    var isValid = /^([0-9][0-9]*)$/.test(v);\n    if (!isValid) throw new Error(\"Invalid integer: \" + v);\n\n    if (supportsNativeBigInt) {\n      return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\n    }\n\n    var r = [],\n        max = v.length,\n        l = LOG_BASE,\n        min = max - l;\n\n    while (max > 0) {\n      r.push(+v.slice(min, max));\n      min -= l;\n      if (min < 0) min = 0;\n      max -= l;\n    }\n\n    trim(r);\n    return new BigInteger(r, sign);\n  }\n\n  function parseNumberValue(v) {\n    if (supportsNativeBigInt) {\n      return new NativeBigInt(BigInt(v));\n    }\n\n    if (isPrecise(v)) {\n      if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\n      return new SmallInteger(v);\n    }\n\n    return parseStringValue(v.toString());\n  }\n\n  function parseValue(v) {\n    if (typeof v === \"number\") {\n      return parseNumberValue(v);\n    }\n\n    if (typeof v === \"string\") {\n      return parseStringValue(v);\n    }\n\n    if (typeof v === \"bigint\") {\n      return new NativeBigInt(v);\n    }\n\n    return v;\n  } // Pre-define numbers in range [-999,999]\n\n\n  for (var i = 0; i < 1000; i++) {\n    Integer[i] = parseValue(i);\n    if (i > 0) Integer[-i] = parseValue(-i);\n  } // Backwards compatibility\n\n\n  Integer.one = Integer[1];\n  Integer.zero = Integer[0];\n  Integer.minusOne = Integer[-1];\n  Integer.max = max;\n  Integer.min = min;\n  Integer.gcd = gcd;\n  Integer.lcm = lcm;\n\n  Integer.isInstance = function (x) {\n    return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt;\n  };\n\n  Integer.randBetween = randBetween;\n\n  Integer.fromArray = function (digits, base, isNegative) {\n    return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\n  };\n\n  return Integer;\n}(); // Node.js check\n\n\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\n  module.exports = bigInt;\n} //amd check\n\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return bigInt;\n  });\n}"],"sourceRoot":""}